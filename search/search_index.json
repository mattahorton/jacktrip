{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to JackTrip JackTrip is a Linux, Mac OSX, or Windows multi-machine audio system used for network music performance over the Internet. It supports any number of channels (as many as the computer/network can handle) of bidirectional, high quality, uncompressed audio signal streaming. You can use it between any combination of machines e.g., one end using Linux can connect to another using Mac OSX.","title":"Home"},{"location":"#welcome-to-jacktrip","text":"JackTrip is a Linux, Mac OSX, or Windows multi-machine audio system used for network music performance over the Internet. It supports any number of channels (as many as the computer/network can handle) of bidirectional, high quality, uncompressed audio signal streaming. You can use it between any combination of machines e.g., one end using Linux can connect to another using Mac OSX.","title":"Welcome to JackTrip"},{"location":"Install/","text":"Installation Linux On Linux the easiest way to install JackTrip is to use the distribution's package manager. Fedora: sudo dnf install jacktrip Debian/Ubuntu: sudo apt install jacktrip MacOS OSX installer or executable at CCRMA . Temporary link to JackTrip 1.2.1 installer (see more details here ) Windows Windows installer or executable at CCRMA . Build from Source To keep up with the latest changes, both experimental and stable, follow instructions to compile for Linux , MacOS or Windows .","title":"Installation"},{"location":"Install/#installation","text":"","title":"Installation"},{"location":"Install/#linux","text":"On Linux the easiest way to install JackTrip is to use the distribution's package manager. Fedora: sudo dnf install jacktrip Debian/Ubuntu: sudo apt install jacktrip","title":"Linux"},{"location":"Install/#macos","text":"OSX installer or executable at CCRMA . Temporary link to JackTrip 1.2.1 installer (see more details here )","title":"MacOS"},{"location":"Install/#windows","text":"Windows installer or executable at CCRMA .","title":"Windows"},{"location":"Install/#build-from-source","text":"To keep up with the latest changes, both experimental and stable, follow instructions to compile for Linux , MacOS or Windows .","title":"Build from Source"},{"location":"About/CHANGELOG/","text":"Changelog 1.3.0 (added) async networking in hub listener (added) limiter, compressor, reverb (added) examine audio delay (added) jitter buffer alternatives (added) broadcast output ports (added) PREFIX variable for installation path (added) disconnect on timeout (added) SIGTERM (added) simulate packet loss, jitter (added) hubpatch 5, no auto patching (added) jack client name length check (added) scripts/hubMode/test_hub_mode_server_and_client.sh (fixed) misc. typos, indentation (fixed) short form IO stat options (fixed) nullptr jack server name when creating jack client (fixed) stop ring buffer blocking when jack has been stopped (fixed) JMess handling of non-western characters (fixed) closing curly brace on mJackTrip client creation (fixed) Warnings (fixed) remove rtaudio device and mpeeraddress msgs. (fixed) signal and slot connections (fixed) incorrect dependency from jacktrip_main (update) RT thread priority for network I/O (update) clipping to saturation (update) build instructions 1.2.2 (added) bindPort range to reject oddball connections (fixed) jack client name strings 1.2.1 (added) src/build script builds in ../builddir (fixed) refactor \"Master\" to be \"Hub\" (fixed) 1.2.1 correctly versioned and tagged 1.2 (added) jack patching modes (-p) for Hub Mode server (-S) (fixed) Compilation under ubuntu (removed) setRealtimeProcessPriority() (removed) Rtaudio mode (but still has dependencies) (fixed) IPv4-mapped IPv6 addressing bug ... (fixed) Fixed compilation for MacOSX10.11.sdk. (update) Updated to RtAudio 4.1.1, and using shared lib in linux. 1.1 (added) Support for RtAudio. Jacktrip can now be used without Jack (added) DNS Look-up support, now one machine can have a private IP (but still needs to have UDP ports open) (added) New port to Windows XP and Windows Vista (experimental and not tested for a long time, only when using jacktrip as a library) (added) Multiclient Server (experimental and not exposed in the executable) 1.0.5 (added) Compatibility with JamLink boxes (restricted at the moment to 48KHz, 64 buffer size and 1 channel) (added) New port structure that allows the communication between a public server and a local client (added) Option for packets without header (added) Option to change default client name (fixed) General optimizations and code cleanup (added) Improved, now cross-platform build script 1.0.4 (fixed) Buss error caused when no physical inputs or outputs ports are available 1.0.3 (added) Redundancy Algorithm for UDP Packets to avoid glitches with packet losses (fixed) Now compiles on 64bits machines (fixed) Improved exceptions handling (added) Basic Karplus-Strong model added as Plug-in (added) Some functionality reimplemented using signals and slots for more flexibility (added) Multiple-Client-Server in alpha testing, expect it working in the next release 1.0.2 Alpha (added) Port offset mode, to use a different UDP port than the default one. (fixed) Improved thread behavior 1.0.1 Alpha (added) jamlink mode to connect with jamlink boxes (fixed) thread priority in both Linux and Mac OS X (still need some work on the Mac OS X version) (fixed) Bug that was causing plug-ins not to behave correctly (added) Loopback mode (added) Underrun Modes: Wavetable (default) and set to zeros (added) Check for peer audio settings, program exists if they don't match (added) Automatically connect ports to available physical audio interface. 1.0 Alpha - initial release","title":"Changelog"},{"location":"About/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"About/CHANGELOG/#130","text":"(added) async networking in hub listener (added) limiter, compressor, reverb (added) examine audio delay (added) jitter buffer alternatives (added) broadcast output ports (added) PREFIX variable for installation path (added) disconnect on timeout (added) SIGTERM (added) simulate packet loss, jitter (added) hubpatch 5, no auto patching (added) jack client name length check (added) scripts/hubMode/test_hub_mode_server_and_client.sh (fixed) misc. typos, indentation (fixed) short form IO stat options (fixed) nullptr jack server name when creating jack client (fixed) stop ring buffer blocking when jack has been stopped (fixed) JMess handling of non-western characters (fixed) closing curly brace on mJackTrip client creation (fixed) Warnings (fixed) remove rtaudio device and mpeeraddress msgs. (fixed) signal and slot connections (fixed) incorrect dependency from jacktrip_main (update) RT thread priority for network I/O (update) clipping to saturation (update) build instructions","title":"1.3.0"},{"location":"About/CHANGELOG/#122","text":"(added) bindPort range to reject oddball connections (fixed) jack client name strings","title":"1.2.2"},{"location":"About/CHANGELOG/#121","text":"(added) src/build script builds in ../builddir (fixed) refactor \"Master\" to be \"Hub\" (fixed) 1.2.1 correctly versioned and tagged","title":"1.2.1"},{"location":"About/CHANGELOG/#12","text":"(added) jack patching modes (-p) for Hub Mode server (-S) (fixed) Compilation under ubuntu (removed) setRealtimeProcessPriority() (removed) Rtaudio mode (but still has dependencies) (fixed) IPv4-mapped IPv6 addressing bug ... (fixed) Fixed compilation for MacOSX10.11.sdk. (update) Updated to RtAudio 4.1.1, and using shared lib in linux.","title":"1.2"},{"location":"About/CHANGELOG/#11","text":"(added) Support for RtAudio. Jacktrip can now be used without Jack (added) DNS Look-up support, now one machine can have a private IP (but still needs to have UDP ports open) (added) New port to Windows XP and Windows Vista (experimental and not tested for a long time, only when using jacktrip as a library) (added) Multiclient Server (experimental and not exposed in the executable)","title":"1.1"},{"location":"About/CHANGELOG/#105","text":"(added) Compatibility with JamLink boxes (restricted at the moment to 48KHz, 64 buffer size and 1 channel) (added) New port structure that allows the communication between a public server and a local client (added) Option for packets without header (added) Option to change default client name (fixed) General optimizations and code cleanup (added) Improved, now cross-platform build script","title":"1.0.5"},{"location":"About/CHANGELOG/#104","text":"(fixed) Buss error caused when no physical inputs or outputs ports are available","title":"1.0.4"},{"location":"About/CHANGELOG/#103","text":"(added) Redundancy Algorithm for UDP Packets to avoid glitches with packet losses (fixed) Now compiles on 64bits machines (fixed) Improved exceptions handling (added) Basic Karplus-Strong model added as Plug-in (added) Some functionality reimplemented using signals and slots for more flexibility (added) Multiple-Client-Server in alpha testing, expect it working in the next release","title":"1.0.3"},{"location":"About/CHANGELOG/#102-alpha","text":"(added) Port offset mode, to use a different UDP port than the default one. (fixed) Improved thread behavior","title":"1.0.2 Alpha"},{"location":"About/CHANGELOG/#101-alpha","text":"(added) jamlink mode to connect with jamlink boxes (fixed) thread priority in both Linux and Mac OS X (still need some work on the Mac OS X version) (fixed) Bug that was causing plug-ins not to behave correctly (added) Loopback mode (added) Underrun Modes: Wavetable (default) and set to zeros (added) Check for peer audio settings, program exists if they don't match (added) Automatically connect ports to available physical audio interface.","title":"1.0.1 Alpha"},{"location":"About/CHANGELOG/#10-alpha-initial-release","text":"","title":"1.0 Alpha  - initial release"},{"location":"About/License/","text":"Copyright (c) 2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"About/Resources/","text":"Post Configuration & Using Jacktrip Detailed instructions at CCRMA Raspberry Pi paper accompanying jacktrip demo at Linux Audio Conference 2019 Other Repos jacktrip (1.0) was released on google code. When that shut down, it migrated to github (1.05, 1.1). It then moved to the CCRMA's cm-gitlab for version 1.2. And as of spring 2020 it moved back to GitHub for the current development. Links Preliminary Documentation and API . Subscribe to the Mailing List . CCRMA . SoundWIRE group . Juan-Pablo Caceres . Related Software JMess : A utility to save your audio connections (mess).","title":"Resources"},{"location":"About/Resources/#post-configuration-using-jacktrip","text":"Detailed instructions at CCRMA","title":"Post Configuration &amp; Using Jacktrip"},{"location":"About/Resources/#raspberry-pi","text":"paper accompanying jacktrip demo at Linux Audio Conference 2019","title":"Raspberry Pi"},{"location":"About/Resources/#other-repos","text":"jacktrip (1.0) was released on google code. When that shut down, it migrated to github (1.05, 1.1). It then moved to the CCRMA's cm-gitlab for version 1.2. And as of spring 2020 it moved back to GitHub for the current development.","title":"Other Repos"},{"location":"About/Resources/#links","text":"Preliminary Documentation and API . Subscribe to the Mailing List . CCRMA . SoundWIRE group . Juan-Pablo Caceres .","title":"Links"},{"location":"About/Resources/#related-software","text":"JMess : A utility to save your audio connections (mess).","title":"Related Software"},{"location":"About/Todo/","text":"High Priority Add redundancy to UDP (DONE) Finish header implementation, add run-time check Plug-ins Extend Plugin structure to include more than 1 plug-in and add the mode for local effect (not loopback) add the offset option to process starting from a different channel Set the faust compiler to automatically generate plugins Add low latency compression www.celt-codec.org Protocol Add TCP clacc Add SCTP class Maybe add a layer of OSC communication for control messages","title":"Todo"},{"location":"About/Todo/#high-priority","text":"Add redundancy to UDP (DONE) Finish header implementation, add run-time check","title":"High Priority"},{"location":"About/Todo/#plug-ins","text":"Extend Plugin structure to include more than 1 plug-in and add the mode for local effect (not loopback) add the offset option to process starting from a different channel Set the faust compiler to automatically generate plugins Add low latency compression www.celt-codec.org","title":"Plug-ins"},{"location":"About/Todo/#protocol","text":"Add TCP clacc Add SCTP class Maybe add a layer of OSC communication for control messages","title":"Protocol"},{"location":"Build/Linux/","text":"Build Instructions The following are instructions for compiling Jacktrip from source. Compiling from source is the best way to keep up with the latest changes, both stable and experimental. For quicker ways to install Jacktrip, go to README.md in the root directory of the project. Dependencies g++ Qt 5.14.2 Jack Note: rtaudio is no longer a dependency Fedora dnf install qt5-devel dnf groupinstall \"C Development Tools and Libraries\" dnf groupinstall \"Development Tools\" dnf install jack-audio-connection-kit-devel alsa-lib-devel git dnf install iperf qjackctl audacity Clone the git repo and run ./build in the src directory or use QtCreator to compile Ubuntu and Debian/Raspbian apt install --no-install-recommends build-essential librtaudio-dev qt5-default autoconf automake libtool make libjack-jackd2-dev git apt install qjackctl audacity iperf Clone the git repo and run ./build in the src directory or use QtCreator to compile Other Linux distributions the latest Qt jack-audio-connection-kit-devel Clone the git repo and run ./build in the src directory or use QtCreator to compile If you are using yum you can just install them (as root) with: yum install jack-audio-connection-kit-devel and install qt from the qt site. Build You can compile using the build script or QtCreator. To clone the repo in the Terminal: $ git clone https://github.com/jacktrip/jacktrip.git To compile using the build script: $ cd jacktrip/src $ ./build $ cd ../builddir $ ls You should see a jacktrip executable in this folder. If the build script doesn't work on a different Linux flavor, try building the Makefiles yourself. You'd need qmake. Then you can build by: $ qmake jacktrip.pro $ make release To build using QtCreator: * Open jacktrip.pro using QtCreator * Choose a correctly configured Kit Installation You need to have a working Jack installation on your machine (see Dependencies above). To install using Terminal (skip the first three steps if you've already followed the Build instructions above): $ git clone https://github.com/jacktrip/jacktrip.git $ cd jacktrip/src $ ./build $ cd ../builddir $ sudo cp jacktrip /usr/local/bin/ (enter your password when prompted) $ sudo chmod 755 /usr/local/bin/jacktrip (now you can run jacktrip from any directory using Terminal) Verification If you have installed jacktrip, from anywhere in the Terminal, type: $ jacktrip -v If you have compiled from source without installing, in the /builddir directory type: $ ./jacktrip -v If you see something like this, you have successfully installed Jacktrip: JackTrip VERSION: 1.xx Copyright (c) 2008-2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University","title":"Linux"},{"location":"Build/Linux/#build-instructions","text":"The following are instructions for compiling Jacktrip from source. Compiling from source is the best way to keep up with the latest changes, both stable and experimental. For quicker ways to install Jacktrip, go to README.md in the root directory of the project.","title":"Build Instructions"},{"location":"Build/Linux/#dependencies","text":"g++ Qt 5.14.2 Jack Note: rtaudio is no longer a dependency","title":"Dependencies"},{"location":"Build/Linux/#fedora","text":"dnf install qt5-devel dnf groupinstall \"C Development Tools and Libraries\" dnf groupinstall \"Development Tools\" dnf install jack-audio-connection-kit-devel alsa-lib-devel git dnf install iperf qjackctl audacity Clone the git repo and run ./build in the src directory or use QtCreator to compile","title":"Fedora"},{"location":"Build/Linux/#ubuntu-and-debianraspbian","text":"apt install --no-install-recommends build-essential librtaudio-dev qt5-default autoconf automake libtool make libjack-jackd2-dev git apt install qjackctl audacity iperf Clone the git repo and run ./build in the src directory or use QtCreator to compile","title":"Ubuntu and Debian/Raspbian"},{"location":"Build/Linux/#other-linux-distributions","text":"the latest Qt jack-audio-connection-kit-devel Clone the git repo and run ./build in the src directory or use QtCreator to compile If you are using yum you can just install them (as root) with: yum install jack-audio-connection-kit-devel and install qt from the qt site.","title":"Other Linux distributions"},{"location":"Build/Linux/#build","text":"You can compile using the build script or QtCreator. To clone the repo in the Terminal: $ git clone https://github.com/jacktrip/jacktrip.git To compile using the build script: $ cd jacktrip/src $ ./build $ cd ../builddir $ ls You should see a jacktrip executable in this folder. If the build script doesn't work on a different Linux flavor, try building the Makefiles yourself. You'd need qmake. Then you can build by: $ qmake jacktrip.pro $ make release To build using QtCreator: * Open jacktrip.pro using QtCreator * Choose a correctly configured Kit","title":"Build"},{"location":"Build/Linux/#installation","text":"You need to have a working Jack installation on your machine (see Dependencies above). To install using Terminal (skip the first three steps if you've already followed the Build instructions above): $ git clone https://github.com/jacktrip/jacktrip.git $ cd jacktrip/src $ ./build $ cd ../builddir $ sudo cp jacktrip /usr/local/bin/ (enter your password when prompted) $ sudo chmod 755 /usr/local/bin/jacktrip (now you can run jacktrip from any directory using Terminal)","title":"Installation"},{"location":"Build/Linux/#verification","text":"If you have installed jacktrip, from anywhere in the Terminal, type: $ jacktrip -v If you have compiled from source without installing, in the /builddir directory type: $ ./jacktrip -v If you see something like this, you have successfully installed Jacktrip: JackTrip VERSION: 1.xx Copyright (c) 2008-2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University","title":"Verification"},{"location":"Build/Mac/","text":"Build Instructions The following are instructions for compiling Jacktrip from source. Compiling from source is the best way to keep up with the latest changes, both stable and experimental. For quicker ways to install Jacktrip, go to README.md in the root directory of the project. Dependencies g++ Qt 5.14.2 Jack RtAudio is no longer a dependency. You might want to skip the steps you don't need. Install Jack2 https://jackaudio.org/downloads/ If this command returns the XCode version, you have it installed: xcodebuild -version If you don't have XCode, go to the AppStore to download and install it. If this command returns the version number of the package manager Homebrew, you have it installed: brew -v If you don't have Homebrew, install it: /bin/bash -c \"$(curl -fsSLhttps://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" To install git if you don't have it: brew install git brew install qjackctl Install and link qt5: brew install qt5 brew link qt5 --force Clone the git repo and run ./build in the src directory or use QtCreator to compile Build You can compile using the build script or QtCreator. To clone the repo in the Terminal: $ git clone https://github.com/jacktrip/jacktrip.git To compile using the build script: $ cd jacktrip/src $ ./build $ cd ../builddir $ ls You should see a jacktrip executable in this folder. If the build script doesn't work, try building the Makefiles yourself. You'd need qmake. Then you can build by: $ qmake jacktrip.pro $ make release To build using QtCreator: * Open jacktrip.pro using QtCreator * Choose a correctly configured Kit QtCreator places the jacktrip executabe by default in a folder with a name like build-jacktrip-Desktop_x86_darwin_generic_mach_o_64bit-Release/ . Installation You need to have a working Jack installation on your machine (see Dependencies above). To install using Terminal (skip the first three steps if you've already followed the Build instructions above): $ git clone https://github.com/jacktrip/jacktrip.git $ cd jacktrip/src $ ./build $ cd ../builddir $ sudo cp jacktrip /usr/local/bin/ (enter your password when prompted) $ sudo chmod 755 /usr/local/bin/jacktrip (now you can run jacktrip from any directory using Terminal) Verification If you have installed jacktrip, from anywhere in the Terminal, type: $ jacktrip -v If you have compiled from source without installing, in the /builddir directory type: $ ./jacktrip -v If you see something like this, you have successfully installed Jacktrip: JackTrip VERSION: 1.xx Copyright (c) 2008-2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University","title":"Mac OS"},{"location":"Build/Mac/#build-instructions","text":"The following are instructions for compiling Jacktrip from source. Compiling from source is the best way to keep up with the latest changes, both stable and experimental. For quicker ways to install Jacktrip, go to README.md in the root directory of the project.","title":"Build Instructions"},{"location":"Build/Mac/#dependencies","text":"g++ Qt 5.14.2 Jack RtAudio is no longer a dependency. You might want to skip the steps you don't need. Install Jack2 https://jackaudio.org/downloads/ If this command returns the XCode version, you have it installed: xcodebuild -version If you don't have XCode, go to the AppStore to download and install it. If this command returns the version number of the package manager Homebrew, you have it installed: brew -v If you don't have Homebrew, install it: /bin/bash -c \"$(curl -fsSLhttps://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" To install git if you don't have it: brew install git brew install qjackctl Install and link qt5: brew install qt5 brew link qt5 --force Clone the git repo and run ./build in the src directory or use QtCreator to compile","title":"Dependencies"},{"location":"Build/Mac/#build","text":"You can compile using the build script or QtCreator. To clone the repo in the Terminal: $ git clone https://github.com/jacktrip/jacktrip.git To compile using the build script: $ cd jacktrip/src $ ./build $ cd ../builddir $ ls You should see a jacktrip executable in this folder. If the build script doesn't work, try building the Makefiles yourself. You'd need qmake. Then you can build by: $ qmake jacktrip.pro $ make release To build using QtCreator: * Open jacktrip.pro using QtCreator * Choose a correctly configured Kit QtCreator places the jacktrip executabe by default in a folder with a name like build-jacktrip-Desktop_x86_darwin_generic_mach_o_64bit-Release/ .","title":"Build"},{"location":"Build/Mac/#installation","text":"You need to have a working Jack installation on your machine (see Dependencies above). To install using Terminal (skip the first three steps if you've already followed the Build instructions above): $ git clone https://github.com/jacktrip/jacktrip.git $ cd jacktrip/src $ ./build $ cd ../builddir $ sudo cp jacktrip /usr/local/bin/ (enter your password when prompted) $ sudo chmod 755 /usr/local/bin/jacktrip (now you can run jacktrip from any directory using Terminal)","title":"Installation"},{"location":"Build/Mac/#verification","text":"If you have installed jacktrip, from anywhere in the Terminal, type: $ jacktrip -v If you have compiled from source without installing, in the /builddir directory type: $ ./jacktrip -v If you see something like this, you have successfully installed Jacktrip: JackTrip VERSION: 1.xx Copyright (c) 2008-2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University","title":"Verification"},{"location":"Build/Meson_build/","text":"Build and Installation Instructions with Meson Install Dependencies Fedora: dnf install meson qt5-qtbase-devel rtaudio-devel jack-audio-connection-kit-devel Debian/Ubuntu: apt install meson build-essential qtbase5-dev librtaudio-dev libjack-jackd2-dev MacOS with brew (not tested): brew install meson qt rt-audio jack Build Prepare your build directory: meson --buildtype release builddir Now build with: cd builddir meson compile Install with: sudo meson install","title":"Meson Build"},{"location":"Build/Meson_build/#build-and-installation-instructions-with-meson","text":"","title":"Build and Installation Instructions with Meson"},{"location":"Build/Meson_build/#install-dependencies","text":"Fedora: dnf install meson qt5-qtbase-devel rtaudio-devel jack-audio-connection-kit-devel Debian/Ubuntu: apt install meson build-essential qtbase5-dev librtaudio-dev libjack-jackd2-dev MacOS with brew (not tested): brew install meson qt rt-audio jack","title":"Install Dependencies"},{"location":"Build/Meson_build/#build","text":"Prepare your build directory: meson --buildtype release builddir Now build with: cd builddir meson compile Install with: sudo meson install","title":"Build"},{"location":"Build/Windows/","text":"WINDOWS (XP and later) Note: Some users have reported success using the PortAudio driver, though it is not currently supported. Build Note: WIN10BUILDINSTRUCTIONS.pdf (in the same directory as this file) has screenshots of the Windows 10 build process and step-by-step instructions. If you do not have Git installed, download it from https://git-scm.com/download/win. Open the command line by typing cmd.exe in the Windows search bar. Use the cd command to navigate to the directory where you would like to install jacktrip, e.g. cd C:\\Users\\Your User Name\\ . Use git clone https://github.com/jacktrip/jacktrip.git to download a fresh copy of the repo or git pull to update your repo. On Windows 10, the easiest way to build is in the command line: To add the location of qmake to the path, in the Windows search bar, type \"environment variable\" and click on the Environment Variables button in the Advanced tab of System Properties. Find the Path variable in System variables, click Edit, and enter the location of qmake, e.g. C:\\Qt\\5.15.0\\mingw81_64\\bin , where 5.15.0 is the version of Qt you installed. To verify you have g++ installed, type where g++ in the command line. If the command returns not found rather than a path, go to the Qt Maintenance Tool, which might be in a directory such as C:\\Qt\\maintenancetool.exe , and remove, then reinstall Qt. In the command line, use the cd command to navigate to the project directory, e.g. cd jacktrip and execute the following commands: mkdir builddir (this step creates the build directory, and is only necessary if you're building for the first time) $ cd builddir $ qmake -spec win32-g++ ../src/jacktrip.pro # you may skip this step if you're building for the first time $ mingw32-make clean # you may skip this step if you're building for the first time $ qmake -spec win32-g++ ../src/jacktrip.pro $ mingw32-make release On earlier Windows versions, the easiest way to build is to download the free Qt Creator IDE from https://www.qt.io/download since the jacktrip buildscript is written in qmake. Open the src/jacktrip.pro and configure the project. Make sure to select the MinGW compiler (for example the one shipped with QtCreator). Building with Clang or Microsoft Visual Studio Compilers is currently not supported! Download Jack2 from https://jackaudio.org/downloads/ Make sure to install Jack into C:\\Program Files (x86)\\Jack (as this is the path where the jacktrip build script will look for it). Hit build in QtCreator. Copy the dll files Qt5Core.dll and Qt5Network.dll from your compiler's bin directory, e.g. C:\\Qt\\5.15.0\\mingw81_64\\bin to the folder in your project where your jacktrip.exe is located, e.g. C:\\Users\\Your Name\\jacktrip\\build-jacktrip-Desktop-Qt_5_15_0_MinGW_64_bit-Release\\release . In the above example, 5.15.0 is the version of Qt, MinGW 64 bit is the compiler. The folder names may vary according to the Qt and compiler versions you are using. Note: compiling with modifications in the .pro file (like adding a new source or header file) requires qmake which is only available in the Qt Creator package. Verification In the search field (Windows key + R), enter cmd.exe to open the command line. Use the cd command to navigate to the directory where the executable jacktrip.exe is located, e.g. C:\\Users\\Your Name\\jacktrip\\build-jacktrip-Desktop-Qt_5_15_0_MinGW_64_bit-Release\\release . From there, the following command should return the version of Jacktrip you installed: jacktrip.exe -v If you see something like this, you have successfully installed Jacktrip: JackTrip VERSION: 1.xx Copyright (c) 2008-2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University","title":"Windows"},{"location":"Build/Windows/#windows-xp-and-later","text":"Note: Some users have reported success using the PortAudio driver, though it is not currently supported.","title":"WINDOWS (XP and later)"},{"location":"Build/Windows/#build","text":"Note: WIN10BUILDINSTRUCTIONS.pdf (in the same directory as this file) has screenshots of the Windows 10 build process and step-by-step instructions. If you do not have Git installed, download it from https://git-scm.com/download/win. Open the command line by typing cmd.exe in the Windows search bar. Use the cd command to navigate to the directory where you would like to install jacktrip, e.g. cd C:\\Users\\Your User Name\\ . Use git clone https://github.com/jacktrip/jacktrip.git to download a fresh copy of the repo or git pull to update your repo. On Windows 10, the easiest way to build is in the command line: To add the location of qmake to the path, in the Windows search bar, type \"environment variable\" and click on the Environment Variables button in the Advanced tab of System Properties. Find the Path variable in System variables, click Edit, and enter the location of qmake, e.g. C:\\Qt\\5.15.0\\mingw81_64\\bin , where 5.15.0 is the version of Qt you installed. To verify you have g++ installed, type where g++ in the command line. If the command returns not found rather than a path, go to the Qt Maintenance Tool, which might be in a directory such as C:\\Qt\\maintenancetool.exe , and remove, then reinstall Qt. In the command line, use the cd command to navigate to the project directory, e.g. cd jacktrip and execute the following commands: mkdir builddir (this step creates the build directory, and is only necessary if you're building for the first time) $ cd builddir $ qmake -spec win32-g++ ../src/jacktrip.pro # you may skip this step if you're building for the first time $ mingw32-make clean # you may skip this step if you're building for the first time $ qmake -spec win32-g++ ../src/jacktrip.pro $ mingw32-make release On earlier Windows versions, the easiest way to build is to download the free Qt Creator IDE from https://www.qt.io/download since the jacktrip buildscript is written in qmake. Open the src/jacktrip.pro and configure the project. Make sure to select the MinGW compiler (for example the one shipped with QtCreator). Building with Clang or Microsoft Visual Studio Compilers is currently not supported! Download Jack2 from https://jackaudio.org/downloads/ Make sure to install Jack into C:\\Program Files (x86)\\Jack (as this is the path where the jacktrip build script will look for it). Hit build in QtCreator. Copy the dll files Qt5Core.dll and Qt5Network.dll from your compiler's bin directory, e.g. C:\\Qt\\5.15.0\\mingw81_64\\bin to the folder in your project where your jacktrip.exe is located, e.g. C:\\Users\\Your Name\\jacktrip\\build-jacktrip-Desktop-Qt_5_15_0_MinGW_64_bit-Release\\release . In the above example, 5.15.0 is the version of Qt, MinGW 64 bit is the compiler. The folder names may vary according to the Qt and compiler versions you are using. Note: compiling with modifications in the .pro file (like adding a new source or header file) requires qmake which is only available in the Qt Creator package.","title":"Build"},{"location":"Build/Windows/#verification","text":"In the search field (Windows key + R), enter cmd.exe to open the command line. Use the cd command to navigate to the directory where the executable jacktrip.exe is located, e.g. C:\\Users\\Your Name\\jacktrip\\build-jacktrip-Desktop-Qt_5_15_0_MinGW_64_bit-Release\\release . From there, the following command should return the version of Jacktrip you installed: jacktrip.exe -v If you see something like this, you have successfully installed Jacktrip: JackTrip VERSION: 1.xx Copyright (c) 2008-2020 Juan-Pablo Caceres, Chris Chafe. SoundWIRE group at CCRMA, Stanford University","title":"Verification"}]}